{"version":3,"sources":["utils/txNotifier.ts","utils/web3.js","utils/infura.js","constants/contracts.js","constants/tokens.js","constants/values.js","utils/number.ts","utils/pool.ts","components/NavBar/TotalBalance.tsx","components/NavBar/ConnectButton.tsx","components/NavBar/index.tsx","components/common/EpochBlock.tsx","components/HomePage/index.tsx","components/common/AddressBlock.tsx","components/common/BalanceBlock.tsx","components/common/MaxButton.tsx","components/common/Comment.tsx","components/common/Wrapper.tsx","components/common/CheckBox.tsx","components/Trade/Header.tsx","components/common/IconHeader.tsx","components/Trade/index.tsx","components/Footer/SwitchTheme.tsx","components/Footer/index.tsx","components/common/TextBlock.tsx","components/Wallet/Header.tsx","components/common/BigNumberInput.tsx","components/Wallet/WithdrawDeposit.tsx","components/Wallet/index.tsx","components/Regulation/Header.tsx","components/Regulation/index.tsx","components/Withdraw/Header.tsx","components/Withdraw/WithdrawDeposit.tsx","components/Withdraw/index.tsx","components/HomePageNoWeb3/index.tsx","App.tsx","utils/storage.ts","serviceWorker.js","index.tsx"],"names":["notify","v","console","log","pairAbi","require","tokenGeyserAbi","UINT256_MAX","updateModalMode","theme","a","window","darkMode","connect","web3","Web3","ethereum","eth","getAccounts","addresses","length","enable","toLowerCase","checkConnectedAndGetAddress","approve","tokenAddr","spender","amt","account","oToken","Contract","methods","send","from","on","hash","deposit","dao","amount","daoContract","stake","BigNumber","toFixed","unStake","pool","callback","poolContract","unstake","connectedNetworkType","net","getId","networkId","DollarPool2","DollarPool3","DollarPool4","UNI","ESD","ESDS","TokenGeyser","RAM","MAX_UINT256","pow","minus","ramAbi","geyserAbi","daoAbi","poolAbi","undefined","getTokenBalance","token","tokenContract","balanceOf","call","getBalance","totalStakedFor","unstakeQuery","stakedAmount","getTokenTotalSupply","totalSupply","getTokenAllowance","allowance","getBalanceBonded","balanceOfBonded","getBalanceOfStaged","balanceOfStaged","getTotalDebt","totalDebt","getTotalRedeemable","totalRedeemable","getTotalCoupons","totalCoupons","getTotalCouponsUnderlying","totalCouponUnderlying","getTotalBonded","totalBonded","getTotalStaged","totalStaged","getCouponPremium","couponPremium","getPool","getPoolBalanceOfBonded","getPoolBalanceOfStaged","getPoolBalanceOfRewarded","balanceOfRewarded","getPoolBalanceOfClaimable","balanceOfClaimable","getPoolTotalRewarded","totalRewarded","getPoolTotalClaimable","totalClaimable","toBaseUnitBN","rawAmt","decimals","raw","base","decimalsBN","times","integerValue","toTokenUnitsBN","tokenAmount","tokenDecimals","digits","div","ownership","balance","multipliedBy","dividedBy","formatBN","position","isLessThan","bnStr","includes","parts","split","i","pad","precision","ROUND_FLOOR","toString","replace","delineate","formatMoney","n","toPrecision","Math","abs","Number","getPoolAddress","Error","getLegacyPoolAddress","poolAddress","TotalBalance","user","useState","totalBalance","setTotalBalance","useEffect","isCancelled","updateUserInfo","id","setInterval","clearInterval","Promise","all","esdBalance","stagedBalance","bondedBalance","pairBalanceESDStr","pairTotalSupplyUNIStr","userUNIBalanceStr","userPoolBondedBalanceStr","userPoolStagedBalanceStr","userPoolRewardedBalanceStr","userPoolClaimableBalanceStr","userBalance","userStagedBalance","userBondedBalance","userUNIBalance","userPoolBondedBalance","userPoolStagedBalance","userPoolRewardedBalance","userPoolClaimableBalance","UNItoESD","daoTotalBalance","plus","poolTotalBalance","circulationBalance","style","fontSize","padding","fontWeight","lineHeight","fontFamily","ConnectButton","hasWeb3","setUser","isConnected","setIsConnected","isConnectedLoading","setIsConnectedLoading","validNetworkSelected","setvalidNetworkSelected","address","allowedNetworkType","checkUserLoggedIn","connectWeb3","disconnectWeb3","display","flex","opacity","Box","width","onClick","marginRight","height","IconPower","textAlign","IdentityBadge","entity","LoadingRing","Button","backgroundColor","color","icon","IconConnect","label","disabled","LinkButton","title","to","component","LinkBase","external","alignItems","marginLeft","activeStyle","NavBar","currentTheme","useTheme","logoUrl","_name","borderTop","border","maxWidth","paddingTop","src","alt","EpochBlock","epoch","epochformatted","epochRemainder","floor","Date","now","epochHour","epochMinute","MainButton","description","tag","Tag","HomePage","history","useHistory","epochTime","setEpochTime","flexWrap","flexBasis","className","push","AddressBlock","shorten","BalanceBlock","asset","suffix","integer","balanceBN","gte","tokens","MaxButton","ButtonBase","Comment","styled","props","surfaceContentSecondary","MyCheckBox","TradePageHeader","pairBalanceRAM","pairBalanceWETH","uniswapPair","price","IconHeader","text","primary","href","UniswapPool","setPairBalanceRAM","pairBalanceUSDC","setPairBalanceUSDC","pairBalanceRAMStr","pairBalanceUSDCStr","SwitchMode","updateTheme","IconStar","IconStarFilled","FooterLink","Footer","surface","left","bottom","marginTop","marginBottom","role","aria-labelledby","TextBlock","AccountPageHeader","userLpToken","userRamToken","userEarnedToken","BigNumberInput","value","setter","adornment","TextInput","type","adornmentPosition","wide","isNegative","onChange","event","target","onBlur","WithdrawDeposit","depositAmount","setDepositAmount","heading","comparedTo","minWidth","IconCirclePlus","Wallet","override","useParams","setUserLpToken","userStakedLpToken","setUserStakedLpToken","setRamToken","setEarnedToken","userESDAllowance","setUserESDAllowance","lpTokens","ramToken","earnedAmount","esdAllowance","RegulationHeader","poolLiquidity","poolRewarded","poolClaimable","legacyPoolRewarded","legacyPoolClaimable","daoTotalSupply","poolTotalSupply","legacyPoolTotalSupply","circulatingSupply","Distribution","toNumber","items","item","percentage","ONE_COUPON","Regulation","setTotalSupply","setTotalBonded","setTotalStaged","setTotalRedeemable","setPoolLiquidity","poolTotalRewarded","setPoolTotalRewarded","poolTotalClaimable","setPoolTotalClaimable","legacyPoolTotalRewarded","setLegacyPoolTotalRewarded","legacyPoolTotalClaimable","setLegacyPoolTotalClaimable","setTotalDebt","setTotalCoupons","totalCouponsUnderlying","setTotalCouponsUnderlying","setCouponPremium","legacyPoolAddress","totalSupplyStr","totalBondedStr","totalStagedStr","totalRedeemableStr","poolLiquidityStr","poolTotalRewardedStr","poolTotalClaimableStr","legacyPoolTotalRewardedStr","legacyPoolTotalClaimableStr","totalDebtStr","totalCouponsStr","totalCouponsUnderlyingStr","isGreaterThan","couponPremiumStr","PoolPageHeader","isZero","isPositive","Pool","HomePageNoWeb3","location","App","key","defaultValue","storedTheme","localStorage","getItem","setHasWeb3","setTheme","chainId","connectors","walletconnect","rpcUrl","walletlink","url","appName","appLogoUrl","Main","assetsUrl","process","layout","Layout","path","Trade","Withdraw","newTheme","setItem","storePreference","Boolean","hostname","match","Moment","locale","momentLocalizer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.17989a33.chunk.js","sourcesContent":["export const notify = {\n  hash: (v) => console.log(v)\n}","/* eslint-disable camelcase */\nimport Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\nimport { notify } from './txNotifier.ts';\nconst pairAbi = require('../constants/abi/UniswapV2Pair.json');\nconst tokenGeyserAbi = require('../constants/abi/TokenGeyser.json');\n\nconst UINT256_MAX = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\n/**\n * Connection Utilities\n */\n\nexport const updateModalMode = async (theme) => {\n  window.darkMode = theme === 'dark';\n};\n\nexport const connect = async () => {\n  window.web3 = new Web3(window.ethereum);\n  let addresses = await window.web3.eth.getAccounts();\n  if (!addresses.length) {\n    try {\n      addresses = await window.ethereum.enable();\n    } catch (e) {\n      console.log(e);\n      return false;\n    }\n  }\n\n  return addresses.length ? addresses[0].toLowerCase() : null;\n};\n\n\n// eslint-disable-next-line consistent-return\nexport const checkConnectedAndGetAddress = async () => {\n  let addresses = await window.web3.eth.getAccounts();\n  if (!addresses.length) {\n    try {\n      addresses = await window.ethereum.enable();\n      // eslint-disable-next-line no-empty\n    } catch (e) { }\n  }\n\n  return addresses[0];\n};\n\n/**\n * ERC20 Utilities\n */\n\nexport const approve = async (tokenAddr, spender, amt = UINT256_MAX) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new window.web3.eth.Contract(pairAbi, tokenAddr);\n  await oToken.methods\n    .approve(spender, amt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const deposit = async (dao, amount) => {\n  const account = await checkConnectedAndGetAddress();\n  const daoContract = new window.web3.eth.Contract(tokenGeyserAbi, dao);\n  await daoContract.methods\n    .stake(new BigNumber(amount).toFixed(), [])\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/* UNI-V2 Incentivization Pool */\nexport const unStake = async (pool, amount, callback) => {\n  const account = await checkConnectedAndGetAddress();\n  const poolContract = new window.web3.eth.Contract(tokenGeyserAbi, pool);\n  await poolContract.methods\n    .unstake(new BigNumber(amount).toFixed(), [])\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n      callback(hash);\n    });\n};\n\nexport const connectedNetworkType = async () => {\n  try {\n    let networkId = await window.web3.eth.net.getId();\n    if(networkId && (networkId === 1 || networkId === 42)) {\n      return true;\n    }\n    return false;\n  }\n  catch(err) {\n    console.log('err', err);\n  }\n}\n","import Web3 from 'web3';\n\nimport BigNumber from 'bignumber.js';\nimport { UniswapV2Router02 } from '../constants/contracts';\nimport { ESD, UNI, USDC } from '../constants/tokens';\nimport { POOL_EXIT_LOCKUP_EPOCHS } from '../constants/values';\n\nconst ramAbi = require('../constants/abi/RamToken.json');\nconst geyserAbi = require('../constants/abi/TokenGeyser.json');\nconst daoAbi = require('../constants/abi/Implementation.json');\nconst poolAbi = require('../constants/abi/Pool.json');\nconst uniswapRouterAbi = require('../constants/abi/UniswapV2Router02.json');\nconst uniswapPairAbi = require('../constants/abi/UniswapV2Pair.json');\n\nlet web3;\n// eslint-disable-next-line no-undef\nif (window.ethereum !== undefined) {\n  // eslint-disable-next-line no-undef\n  web3 = new Web3(ethereum);\n}\n\n/**\n *\n * @param {string} token address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getTokenBalance = async (token, account) => {\n  if (account === '') return '0';\n  const tokenContract = new web3.eth.Contract(ramAbi, token);\n  return tokenContract.methods.balanceOf(account).call();\n};\n\n/**\n *\n * @param {string} token address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getBalance = async (token, account) => {\n  if (account === '') return '0';\n  const tokenContract = new web3.eth.Contract(ramAbi, token);\n  return tokenContract.methods.balanceOf(account).call();\n};\n\nexport const totalStakedFor = async (token, account) => {\n  if (account === '') return '0';\n  const tokenContract = new web3.eth.Contract(geyserAbi, token);\n  return tokenContract.methods.totalStakedFor(account).call();\n};\n\nexport const unstakeQuery = async (token, account) => {\n  if (account === '') return '0';\n  const tokenContract = new web3.eth.Contract(geyserAbi, token);\n  let stakedAmount = await totalStakedFor(token, account);\n  if (stakedAmount < 1)\n    return 0;\n  return tokenContract.methods.unstakeQuery(stakedAmount).call({from: account});\n};\n\nexport const getTokenTotalSupply = async (token) => {\n  const tokenContract = new web3.eth.Contract(ramAbi, token);\n  return tokenContract.methods.totalSupply().call();\n};\n\n/**\n *\n * @param {string} token\n * @param {string} account\n * @param {string} spender\n * @return {Promise<string>}\n */\nexport const getTokenAllowance = async (token, account, spender) => {\n  const tokenContract = new web3.eth.Contract(ramAbi, token);\n  return tokenContract.methods.allowance(account, spender).call();\n};\n\n// Døllar Protocol\n\n/**\n *\n * @param {string} dao address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getBalanceBonded = async (dao, account) => {\n  if (account === '') return '0';\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.balanceOfBonded(account).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getBalanceOfStaged = async (dao, account) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.balanceOfStaged(account).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getStatusOf = async (dao, account) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.statusOf(account).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getFluidUntil = async (dao, account) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.fluidUntil(account).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getLockedUntil = async (dao, account) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.lockedUntil(account).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @return {Promise<string>}\n */\nexport const getEpoch = async (dao) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.epoch().call();\n};\n\n/**\n *\n * @param {string} dao address\n * @return {Promise<string>}\n */\nexport const getEpochTime = async (dao) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.epochTime().call();\n};\n\n/**\n *\n * @param {string} dao address\n * @return {Promise<string>}\n */\nexport const getTotalDebt = async (dao) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.totalDebt().call();\n};\n\n/**\n *\n * @param {string} dao address\n * @return {Promise<string>}\n */\nexport const getTotalRedeemable = async (dao) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.totalRedeemable().call();\n};\n\n/**\n *\n * @param {string} dao address\n * @return {Promise<string>}\n */\nexport const getTotalCoupons = async (dao) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.totalCoupons().call();\n};\n\n/**\n *\n * @param {string} dao address\n * @return {Promise<string>}\n */\nexport const getTotalCouponsUnderlying = async (dao) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.totalCouponUnderlying().call();\n};\n\n/**\n *\n * @param {string} dao address\n * @return {Promise<string>}\n */\nexport const getTotalBonded = async (dao) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.totalBonded().call();\n};\n\n/**\n *\n * @param {string} dao address\n * @return {Promise<string>}\n */\nexport const getTotalStaged = async (dao) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.totalStaged().call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {number} epoch number\n * @return {Promise<string>}\n */\nexport const getTotalBondedAt = async (dao, epoch) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.totalBondedAt(epoch).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string} candidate address\n * @return {Promise<string>}\n */\nexport const getApproveFor = async (dao, candidate) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.approveFor(candidate).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string} candidate address\n * @return {Promise<string>}\n */\nexport const getRejectFor = async (dao, candidate) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.rejectFor(candidate).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string} candidate address\n * @return {Promise<string>}\n */\nexport const getStartFor = async (dao, candidate) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.startFor(candidate).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string} candidate address\n * @return {Promise<string>}\n */\nexport const getPeriodFor = async (dao, candidate) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.periodFor(candidate).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string} candidate address\n * @return {Promise<boolean>}\n */\nexport const getIsInitialized = async (dao, candidate) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.isInitialized(candidate).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string} account address\n * @param {string} candidate address\n * @return {Promise<string>}\n */\nexport const getRecordedVote = async (dao, account, candidate) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.recordedVote(account, candidate).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string} account address\n * @param {number} epoch number\n * @return {Promise<string>}\n */\nexport const getBalanceOfCoupons = async (dao, account, epoch) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.balanceOfCoupons(account, epoch).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string} account address\n * @param {number[]} epochs number[]\n * @return {Promise<string[]>}\n */\nexport const getBatchBalanceOfCoupons = async (dao, account, epochs) => {\n  const calls = epochs.map((epoch) => getBalanceOfCoupons(dao, account, epoch));\n  return Promise.all(calls);\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string} account address\n * @param {number} epoch number\n * @return {Promise<string>}\n */\nexport const getBalanceOfCouponsUnderlying = async (dao, account, epoch) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.balanceOfCouponUnderlying(account, epoch).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string} account address\n * @param {number[]} epochs number[]\n * @return {Promise<string[]>}\n */\nexport const getBatchBalanceOfCouponsUnderlying = async (dao, account, epochs) => {\n  const calls = epochs.map((epoch) => getBalanceOfCouponsUnderlying(dao, account, epoch));\n  return Promise.all(calls);\n};\n\n/**\n *\n * @param {string} dao address\n * @param {number} epoch address\n * @return {Promise<string>}\n */\nexport const getOutstandingCoupons = async (dao, epoch) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.outstandingCoupons(epoch).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {number} epoch number\n * @return {Promise<string>}\n */\nexport const getCouponsExpiration = async (dao, epoch) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.couponsExpiration(epoch).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @param {number[]} epochs number[]\n * @return {Promise<string[]>}\n */\nexport const getBatchCouponsExpiration = async (dao, epochs) => {\n  const calls = epochs.map((epoch) => getCouponsExpiration(dao, epoch));\n  return Promise.all(calls);\n};\n\n/**\n *\n * @param {string} dao address\n * @param {string|BigNumber} amount uint256\n * @return {Promise<string>}\n */\nexport const getCouponPremium = async (dao, amount) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.couponPremium(new BigNumber(amount).toFixed()).call();\n};\n\n/**\n *\n * @param {string} dao address\n * @return {Promise<string>}\n */\nexport const getImplementation = async (dao) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.implementation().call();\n};\n\n/**\n *\n * @param {string} dao address\n * @return {Promise<string>}\n */\nexport const getPool = async (dao) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  return daoContract.methods.pool().call();\n};\n\n/**\n *\n * @param {string} dao\n * @param {string} account\n * @return {Promise<any[]>}\n */\nexport const getCouponEpochs = async (dao, account) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  const purchaseP = daoContract.getPastEvents('CouponPurchase', {\n    filter: { account },\n    fromBlock: 0,\n  });\n  const transferP = daoContract.getPastEvents('CouponTransfer', {\n    filter: { to: account },\n    fromBlock: 0,\n  });\n  const [bought, given] = await Promise.all([purchaseP, transferP]);\n  const events = bought.map((e) => ({epoch: e.returnValues.epoch, amount: e.returnValues.couponAmount}))\n    .concat(given.map((e) => ({epoch: e.returnValues.epoch, amount: 0})));\n\n  const couponEpochs = [\n    ...events.reduce(\n      (map, event) => {\n        const { epoch, amount } = event;\n        const prev = map.get(epoch);\n\n        if (prev) {\n          map.set(epoch, { epoch, coupons: prev.coupons.plus(new BigNumber(amount)) });\n        } else {\n          map.set(epoch, { epoch, coupons: new BigNumber(amount) });\n        }\n\n        return map;\n      },\n      new Map(),\n    ).values(),\n  ];\n\n  return couponEpochs.sort((a, b) => a - b);\n};\n\n/**\n *\n * @param {string} dao\n * @return {Promise<any[]>}\n */\nexport const getAllProposals = async (dao) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  const payload = (await daoContract.getPastEvents('Proposal', {\n    fromBlock: 0,\n  })).map((event) => {\n    const prop = event.returnValues;\n    prop.blockNumber = event.blockNumber;\n    return prop;\n  });\n  return payload.sort((a, b) => b.blockNumber - a.blockNumber);\n};\n\n/**\n *\n * @param {string} dao\n * @return {Promise<any[]>}\n */\nexport const getAllRegulations = async (dao) => {\n  const daoContract = new web3.eth.Contract(daoAbi, dao);\n  const increaseP = daoContract.getPastEvents('SupplyIncrease', { fromBlock: 0 });\n  const decreaseP = daoContract.getPastEvents('SupplyDecrease', { fromBlock: 0 });\n  const neutralP = daoContract.getPastEvents('SupplyNeutral', { fromBlock: 0 });\n\n  const [increase, decrease, neutral] = await Promise.all([increaseP, decreaseP, neutralP]);\n\n  const events = increase.map((e) => ({ type: 'INCREASE', data: e.returnValues }))\n    .concat(decrease.map((e) => ({ type: 'DECREASE', data: e.returnValues })))\n    .concat(neutral.map((e) => ({ type: 'NEUTRAL', data: e.returnValues })));\n\n  return events.sort((a, b) => b.data.epoch - a.data.epoch);\n};\n\n// Uniswap Protocol\n\nexport const getCost = async (amount) => {\n  const exchange = new web3.eth.Contract(uniswapRouterAbi, UniswapV2Router02);\n  // eslint-disable-next-line no-unused-vars\n  const [inputAmount, _] = await exchange.methods.getAmountsIn(\n    new BigNumber(amount).toFixed(),\n    [USDC.addr, ESD.addr],\n  ).call();\n  return inputAmount;\n};\n\nexport const getProceeds = async (amount) => {\n  const exchange = new web3.eth.Contract(uniswapRouterAbi, UniswapV2Router02);\n  // eslint-disable-next-line no-unused-vars\n  const [_, outputAmount] = await exchange.methods.getAmountsOut(\n    new BigNumber(amount).toFixed(),\n    [ESD.addr, USDC.addr],\n  ).call();\n  return outputAmount;\n};\n\nexport const getReserves = async () => {\n  const exchange = new web3.eth.Contract(uniswapPairAbi, UNI.addr);\n  return exchange.methods.getReserves().call();\n};\n\nexport const getInstantaneousPrice = async () => {\n  const [reserve, token0] = await Promise.all([getReserves(), getToken0()]);\n  const token0Balance = new BigNumber(reserve.reserve0);\n  const token1Balance = new BigNumber(reserve.reserve1);\n  if (token0.toLowerCase() === USDC.addr.toLowerCase()) {\n    return token0Balance.multipliedBy(new BigNumber(10).pow(12)).dividedBy(token1Balance);\n  }\n  return token1Balance.multipliedBy(new BigNumber(10).pow(12)).dividedBy(token0Balance);\n};\n\nexport const getToken0 = async () => {\n  const exchange = new web3.eth.Contract(uniswapPairAbi, UNI.addr);\n  return exchange.methods.token0().call();\n};\n\n// Pool\n\nexport const getPoolStatusOf = async (pool, account) => {\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.statusOf(account).call();\n};\n\n/**\n *\n * @param {string} pool address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getPoolBalanceOfBonded = async (pool, account) => {\n  if (account === '') return '0';\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.balanceOfBonded(account).call();\n};\n\n/**\n *\n * @param {string} pool address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getPoolBalanceOfStaged = async (pool, account) => {\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.balanceOfStaged(account).call();\n};\n\n/**\n *\n * @param {string} pool address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getPoolBalanceOfRewarded = async (pool, account) => {\n  if (account === '') return '0';\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.balanceOfRewarded(account).call();\n};\n\n/**\n *\n * @param {string} pool address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getPoolBalanceOfClaimable = async (pool, account) => {\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.balanceOfClaimable(account).call();\n};\n\n/**\n *\n * @param {string} pool address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getPoolTotalBonded = async (pool) => {\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.totalBonded().call();\n};\n\n/**\n *\n * @param {string} pool address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getPoolTotalRewarded = async (pool) => {\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.totalRewarded().call();\n};\n\n/**\n *\n * @param {string} pool address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getPoolTotalClaimable = async (pool) => {\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.totalClaimable().call();\n};\n\n/**\n *\n * @param {string} pool address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getPoolFluidUntil = async (pool, account) => {\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n\n  // no need to look back further than the pool lockup period\n  const blockNumber = await web3.eth.getBlockNumber();\n  const fromBlock = blockNumber - (POOL_EXIT_LOCKUP_EPOCHS + 1) * 8640;\n  const bondP = poolContract.getPastEvents('Bond', {\n    filter: {account: account}, fromBlock: fromBlock });\n  const unbondP = poolContract.getPastEvents('Unbond', {\n    filter: {account: account}, fromBlock: fromBlock });\n\n  const [bond, unbond] = await Promise.all([bondP, unbondP]);\n  const events = bond.map((e) => e.returnValues)\n    .concat(unbond.map((e) => e.returnValues));\n\n  const startEpoch = events.reduce(\n    (epoch, event) => {\n      if (epoch > event.start)\n        return epoch\n      else\n        return event.start\n    }, 0);\n\n  // these contract events report the start epoch as one more than the active\n  // epoch when the event is emitted, so we subtract 1 here to adjust\n  return (parseInt(startEpoch, 10) + POOL_EXIT_LOCKUP_EPOCHS - 1).toString();\n};\n","/* eslint-disable camelcase */\n// eslint-disable-next-line import/prefer-default-export\nexport const UniswapV2Router02 = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D';\nexport const DollarPool1 = '0xdF0Ae5504A48ab9f913F8490fBef1b9333A68e68';\nexport const DollarPool2 = '0xA5976897BC0081e3895013B08654DfEc50Bcb33F';\nexport const DollarPool3 = '0xBBDA9B2f267b94147cB5b51653237C2F1EE69054';\nexport const DollarPool4 = '0x4082D11E506e3250009A991061ACd2176077C88f';\n","export const UNI = {\n  addr: '0x5f629df06573607097d3ebf7bb276f11c20b00de',\n  decimals: 18,\n  symbol: 'UNI',\n};\n\nexport const USDC = {\n  addr: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n  decimals: 6,\n  symbol: 'USDC',\n};\n\nexport const ESD = {\n  addr: '0x36F3FD68E7325a35EB768F1AedaAe9EA0689d723',\n  decimals: 18,\n  symbol: 'ESD',\n};\n\nexport const ESDS = {\n  addr: '0x443D2f2755DB5942601fa062Cc248aAA153313D3',\n  decimals: 18,\n  symbol: 'ESDS',\n};\n\nexport const TokenGeyser = {\n  addr: '0x11EcFAE11Da93eE9c692b14324676b1842025CC3',\n};\n\nexport const RAM = {\n  addr: '0xcAcc27EE067794cddA679464b185fE8FB8391c9a',\n  decimals: 18,\n  symbol: 'RAM',\n};\n","import BigNumber from 'bignumber.js';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const MAX_UINT256 = new BigNumber(2).pow(256).minus(1);\nexport const GOVERNANCE_QUORUM = new BigNumber('0.20');\nexport const GOVERNANCE_PROPOSAL_THRESHOLD = new BigNumber('0.005');\nexport const COUPON_EXPIRATION = 90\nexport const DAO_EXIT_LOCKUP_EPOCHS = 15\nexport const POOL_EXIT_LOCKUP_EPOCHS = 5\n","import BigNumber from 'bignumber.js';\n\n/**\n * Convert 10.999 to 10999000\n */\nexport function toBaseUnitBN(rawAmt:string| number| BigNumber, decimals: number):BigNumber {\n  const raw = new BigNumber(rawAmt);\n  const base = new BigNumber(10);\n  const decimalsBN = new BigNumber(decimals);\n  return raw.times(base.pow(decimalsBN)).integerValue();\n}\n\n/**\n * Convert 10999000 to 10.999\n */\nexport const toTokenUnitsBN = (tokenAmount:string|number|BigNumber, tokenDecimals:number): BigNumber => {\n  const amt = new BigNumber(tokenAmount);\n  const digits = new BigNumber(10).pow(new BigNumber(tokenDecimals));\n  return amt.div(digits);\n};\n\nexport const isPos = (amount: BigNumber): boolean => {\n  return !amount.isZero() && amount.isPositive();\n};\n\nexport const ownership = (balance: BigNumber, totalSupply: BigNumber): BigNumber => {\n  return balance.multipliedBy(new BigNumber(100)).dividedBy(totalSupply);\n}\n\n/**\n * BigNumber string formatting\n */\n\nexport const formatBN = (amount: BigNumber, position: number): string => {\n  if (amount.isLessThan(new BigNumber(1))) {\n    return pad(amount.precision(position, BigNumber.ROUND_FLOOR).toFixed(), position);\n\n  }\n  return delineate(amount.toFixed(position, BigNumber.ROUND_FLOOR));\n}\n\nfunction delineate(bnStr) {\n  const parts = bnStr.split('.');\n  return parts[0].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \".\" + parts[1];\n}\n\nfunction pad(bnStr, position) {\n  if (!bnStr.includes(\".\")) {\n    bnStr += \".\";\n  }\n\n  const parts = bnStr.split(\".\");\n  for (let i = 0; i < position - parts[1].length; i++) {\n    bnStr += \"0\";\n  }\n\n  return bnStr\n}\n\nexport function formatMoney(n) {\n  n = n.toPrecision(3)\n  return Math.abs(Number(n)) >= 1.0e+9\n    ? Math.abs(Number(n)) / 1.0e+9 + \"B\"\n    : Math.abs(Number(n)) >= 1.0e+6\n      ? Math.abs(Number(n)) / 1.0e+6 + \"MM\"\n      : Math.abs(Number(n)) >= 1.0e+3\n        ? Math.abs(Number(n)) / 1.0e+3 + \"K\"\n        : Math.abs(Number(n));\n}","import { getPool } from \"./infura\";\nimport { ESDS } from \"../constants/tokens\";\nimport {DollarPool1, DollarPool2, DollarPool3, DollarPool4} from \"../constants/contracts\";\n\nexport async function getPoolAddress(): Promise<string> {\n  const pool = await getPool(ESDS.addr);\n  if (pool.toLowerCase() === DollarPool2.toLowerCase()) {\n    return DollarPool2;\n  }\n  if (pool.toLowerCase() === DollarPool3.toLowerCase()) {\n    return DollarPool3;\n  }\n  if (pool.toLowerCase() === DollarPool4.toLowerCase()) {\n    return DollarPool4;\n  }\n\n  throw new Error(\"Unrecognized Pool Address\");\n}\n\nexport function getLegacyPoolAddress(poolAddress): string {\n  if (poolAddress === DollarPool2) {\n    return DollarPool1;\n  }\n  if (poolAddress === DollarPool3) {\n    return DollarPool2;\n  }\n  if (poolAddress === DollarPool4) {\n    return DollarPool3;\n  }\n\n  throw new Error(\"Unrecognized Pool Address\");\n}\n","import React, {useEffect, useState} from 'react';\nimport BigNumber from \"bignumber.js\";\nimport {\n  getBalanceBonded,\n  getBalanceOfStaged,\n  getPoolBalanceOfBonded, getPoolBalanceOfClaimable, getPoolBalanceOfRewarded, getPoolBalanceOfStaged,\n  getTokenBalance,\n  getTokenTotalSupply\n} from \"../../utils/infura\";\nimport {ESD, ESDS, UNI} from \"../../constants/tokens\";\nimport {formatBN, toTokenUnitsBN} from \"../../utils/number\";\nimport {getPoolAddress} from \"../../utils/pool\";\n\ntype TotalBalanceProps = {\n  user: string,\n}\n\nfunction TotalBalance({ user }: TotalBalanceProps) {\n  const [totalBalance, setTotalBalance] = useState(new BigNumber(0));\n\n  //Update User balances\n  useEffect(() => {\n    if (user === '') {\n      setTotalBalance(new BigNumber(0));\n      return;\n    }\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const poolAddress = await getPoolAddress();\n\n      const [\n        esdBalance, stagedBalance, bondedBalance,\n        pairBalanceESDStr, pairTotalSupplyUNIStr, userUNIBalanceStr,\n        userPoolBondedBalanceStr, userPoolStagedBalanceStr,\n        userPoolRewardedBalanceStr, userPoolClaimableBalanceStr,\n      ] = await Promise.all([\n        getTokenBalance(ESD.addr, user),\n        getBalanceOfStaged(ESDS.addr, user),\n        getBalanceBonded(ESDS.addr, user),\n\n        getTokenBalance(ESD.addr, UNI.addr),\n        getTokenTotalSupply(UNI.addr),\n        getTokenBalance(UNI.addr, user),\n        getPoolBalanceOfBonded(poolAddress, user),\n        getPoolBalanceOfStaged(poolAddress, user),\n        getPoolBalanceOfRewarded(poolAddress, user),\n        getPoolBalanceOfClaimable(poolAddress, user),\n      ]);\n\n      const userBalance = toTokenUnitsBN(new BigNumber(esdBalance), ESD.decimals);\n      const userStagedBalance = toTokenUnitsBN(new BigNumber(stagedBalance), ESDS.decimals);\n      const userBondedBalance = toTokenUnitsBN(new BigNumber(bondedBalance), ESDS.decimals);\n\n      const userUNIBalance = toTokenUnitsBN(new BigNumber(userUNIBalanceStr), ESDS.decimals);\n      const userPoolBondedBalance = toTokenUnitsBN(new BigNumber(userPoolBondedBalanceStr), ESDS.decimals);\n      const userPoolStagedBalance = toTokenUnitsBN(new BigNumber(userPoolStagedBalanceStr), ESDS.decimals);\n      const userPoolRewardedBalance = toTokenUnitsBN(new BigNumber(userPoolRewardedBalanceStr), ESDS.decimals);\n      const userPoolClaimableBalance = toTokenUnitsBN(new BigNumber(userPoolClaimableBalanceStr), ESDS.decimals);\n\n      const UNItoESD = new BigNumber(pairBalanceESDStr).dividedBy(new BigNumber(pairTotalSupplyUNIStr));\n\n      const daoTotalBalance = userStagedBalance.plus(userBondedBalance);\n      const poolTotalBalance = UNItoESD.multipliedBy(userPoolStagedBalance.plus(userPoolBondedBalance))\n        .plus(userPoolRewardedBalance.plus(userPoolClaimableBalance));\n      const circulationBalance = UNItoESD.multipliedBy(userUNIBalance).plus(userBalance)\n\n      const totalBalance = daoTotalBalance.plus(poolTotalBalance).plus(circulationBalance)\n\n      if (!isCancelled) {\n        setTotalBalance(totalBalance);\n      }\n    }\n\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  return (\n    <div style={{ fontSize: 14, padding: 3, fontWeight: 400, lineHeight: 1.5, fontFamily: 'aragon-ui-monospace, monospace'}}>\n      ∅{formatBN(totalBalance, 2)}\n    </div>\n  );\n}\n\n\nexport default TotalBalance;\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  IdentityBadge,\n  IconConnect,\n  Box,\n  IconPower,\n  LinkBase,\n  LoadingRing,\n} from \"@aragon/ui\";\n\nimport { connect, connectedNetworkType } from \"../../utils/web3\";\nimport TotalBalance from \"./TotalBalance\";\n\ntype connectButtonProps = {\n  hasWeb3: boolean;\n  user: string;\n  setUser: Function;\n};\n\nfunction ConnectButton({ hasWeb3, user, setUser }: connectButtonProps) {\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnectedLoading, setIsConnectedLoading] = useState(true);\n  const [validNetworkSelected, setvalidNetworkSelected] = useState(true);\n\n  useEffect(() => {\n    async function checkUserLoggedIn() {\n      const address = await connect();\n      if (address === false) return;\n      const allowedNetworkType = await connectedNetworkType();\n      setIsConnected(true);\n      setIsConnectedLoading(false);\n      setUser(address);\n      if(allowedNetworkType === false) {\n        setvalidNetworkSelected(false);\n      }\n    }\n    checkUserLoggedIn();\n  }, []);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setIsConnectedLoading(false);\n    setUser(address);\n  };\n\n  const disconnectWeb3 = async () => {\n    setIsConnected(false);\n    setUser(\"\");\n  };\n\n  return isConnected && !isConnectedLoading ? (\n    <div style={{ display: \"flex\" }}>\n      <div style={{ flex: \"1\" }} />\n      <div style={{ opacity: (!validNetworkSelected) ? 0.4 : 1 }}>\n        <Box padding={4} style={{ width: \"192px\" }}>\n          <div style={{ display: \"flex\" }}>\n            <div>\n              <LinkBase\n                onClick={disconnectWeb3}\n                style={{ marginRight: \"8px\", height: \"24px\" }}\n              >\n                <IconPower />\n              </LinkBase>\n            </div>\n            <div style={{ flex: \"1\", textAlign: \"right\" }}>\n              <IdentityBadge entity={user} />\n            </div>\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <div style={{ flex: \"1\", textAlign: \"right\" }}>\n              <TotalBalance user={user} />\n            </div>\n          </div>\n        </Box>\n      </div>\n    </div>\n  ) : isConnectedLoading ? (\n    <LoadingRing />\n  ) : (\n    <Button\n      style={{ backgroundColor: \"#00aab0\", color: \"#fff\" }}\n      icon={<IconConnect style={{ color: \"#fff\" }} />}\n      label=\"Connect\"\n      onClick={connectWeb3}\n      disabled={!hasWeb3}\n    />\n  );\n}\n\nexport default ConnectButton;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { LinkBase, useTheme } from '@aragon/ui';\nimport ConnectButton from './ConnectButton';\n\ntype NavbarProps = {\n  hasWeb3: boolean;\n  user: string;\n  setUser: Function;\n};\n\nfunction NavBar({ hasWeb3, user, setUser }: NavbarProps) {\n  const currentTheme = useTheme();\n  const logoUrl = `./logo/logo_${currentTheme._name === 'light' ? 'black' : 'white'}.svg`;\n\n  return (\n    <>\n      <div\n        style={{\n          borderTop: '1px solid ' + currentTheme.border,\n          backgroundColor: 'none',\n          textAlign: 'center',\n          height: '128px',\n          width: '100%',\n          fontSize: '14px',\n        }}\n      >\n        <div style={{ maxWidth: '1100px', marginLeft: 'auto', marginRight: 'auto' }}>\n          <div style={{ display: 'flex', paddingTop: '24px' }}>\n            <div style={{ width: '20%', textAlign: 'left' }}>\n              <NavLink to=\"/\" component={LinkBase} style={{ marginRight: '16px', height: '40px' }}>\n                <img src={logoUrl} height=\"40px\" alt=\"Empty Set Dollar\" />\n              </NavLink>\n            </div>\n            <div style={{ width: '60%', textAlign: 'center' }}>\n              <LinkButton title=\"Stake\" to=\"/dao/\" />\n              <LinkButton title=\"Withdraw\" to=\"/pool/\" />\n              <LinkButton title=\"Stats\" to=\"/regulation/\" />\n              <LinkButton title=\"Trade\" to=\"/trade/\" />\n            </div>\n            <div style={{ width: '20%', textAlign: 'right' }}>\n              <ConnectButton hasWeb3={hasWeb3} user={user} setUser={setUser} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\ntype linkButtonProps = {\n  title: string;\n  to: string;\n};\n\nfunction LinkButton({ title, to }: linkButtonProps) {\n  return (\n    <NavLink\n      to={to}\n      component={LinkBase}\n      external={false}\n      style={{\n        display: 'inline-flex',\n        alignItems: 'center',\n        marginLeft: '8px',\n        marginRight: '8px',\n        height: '40px',\n        opacity: 0.5,\n      }}\n      activeStyle={{ opacity: 1 }}\n    >\n      <span style={{ display: 'block', padding: '1%', fontSize: '17px' }}>{title}</span>\n    </NavLink>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\n\ntype EpochBlockProps = {\n  epoch: string\n}\n\nfunction EpochBlock({ epoch }: EpochBlockProps) {\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}>Epoch</div>\n      <div style={{ fontSize: 24, padding: 3, fontWeight: 400, lineHeight: 1.5, fontFamily: 'aragon-ui-monospace, monospace'}}>{epoch}</div>\n    </>\n  );\n}\n\nexport default EpochBlock;\n","import React, {useEffect, useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Box, LinkBase, Tag,\n} from '@aragon/ui';\nimport EpochBlock from \"../common/EpochBlock\";\n\nfunction epochformatted() {\n  const epochStart = 1599148800;\n  const epochPeriod = 8 * 60 * 60;\n  const hour = 60 * 60;\n  const minute = 60;\n  const unixTimeSec = Math.floor(Date.now() / 1000);\n\n  let epochRemainder = unixTimeSec - epochStart\n  const epoch = Math.floor(epochRemainder / epochPeriod);\n  epochRemainder -= epoch * epochPeriod;\n  const epochHour = Math.floor(epochRemainder / hour);\n  epochRemainder -= epochHour * hour;\n  const epochMinute = Math.floor(epochRemainder / minute);\n  epochRemainder -= epochMinute * minute;\n  return `${epoch}-0${epochHour}:${epochMinute > 9 ? epochMinute : \"0\" + epochMinute.toString()}:${epochRemainder > 9 ? epochRemainder : \"0\" + epochRemainder.toString()}`;\n}\n\ntype HomePageProps = {\n  user: string\n};\n\nfunction HomePage({user}: HomePageProps) {\n  const history = useHistory();\n\n  const [epochTime, setEpochTime] = useState(\"0-00:00:00\");\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      if (!isCancelled) {\n        setEpochTime(epochformatted())\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 1000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  return (\n    <>\n      <div style={{ padding: '1%', display: 'flex', flexWrap: 'wrap', alignItems: 'center' }}>\n        <div style={{ flexBasis: '68%' }} />\n        <div style={{ flexBasis: '30%', marginLeft: '35%', textAlign: 'center'}}>\n          <Box>\n            <EpochBlock epoch={epochTime}/>\n          </Box>\n        </div>\n      </div>\n      <div style={{ padding: '1%', display: 'flex', flexWrap: 'wrap', alignItems: 'center' }}>\n        <div style={{ flexBasis: '30%', marginRight: '3%', marginLeft: '2%'  }}>\n          <MainButton\n            title=\"Deposit\"\n            description=\"Earn rewards for staking\"\n            icon={<i className = \"fas fa-parachute-box\"/>}\n            onClick={() => {\n              history.push('/dao/');\n            }}\n          />\n        </div>\n\n        <div style={{ flexBasis: '30%' }}>\n          <MainButton\n            title=\"Withdraw\"\n            description=\"Unstake and Claim LP Tokens.\"\n            icon={<i className = \"fas fa-dot-circle\"/>}\n            onClick={() => {\n              history.push('/pool/');\n            }}\n          />\n        </div>\n\n        <div style={{ flexBasis: '30%', marginLeft: '3%', marginRight: '2%' }}>\n          <MainButton\n            title=\"Stats\"\n            description=\"RAM Info.\"\n            icon={<i className = \"fa fa-file\"/>}\n            onClick={() => {\n              history.push('/regulation/');\n            }}\n          />\n        </div>\n        </div>\n\n        <div style={{ padding: '1%', display: 'flex', flexWrap: 'wrap', alignItems: 'center' }}>\n        <div style={{ flexBasis: '30%', marginLeft: '35%', marginRight: '2%'}}>\n          <MainButton\n            title=\"Trade\"\n            description=\"Trade RAM tokens.\"\n            icon={<i className=\"fas fa-exchange-alt\"/>}\n            onClick={() => {\n              history.push('/trade/');\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\ntype MainButtonPropx = {\n  title: string,\n  description: string,\n  icon: any,\n  onClick: Function,\n  tag?:string\n}\n\nfunction MainButton({\n  title, description, icon, onClick, tag,\n}:MainButtonPropx) {\n  return (\n    <LinkBase onClick={onClick} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding: 10, fontSize: 18 }}>\n          {title}\n          {tag ? <Tag>{tag}</Tag> : <></>}\n        </div>\n        <span style={{ fontSize: 48 }}>\n          {icon}\n        </span>\n        {/*<img alt=\"icon\" style={{ padding: 10, height: 64 }} src={iconUrl} />*/}\n        <div style={{ paddingTop: 5, opacity: 0.5 }}>\n          {' '}\n          {description}\n          {' '}\n        </div>\n\n      </Box>\n    </LinkBase>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { IdentityBadge } from '@aragon/ui';\n\ntype AddressBlockProps = {\n  label:string,\n  address: string\n}\n\nfunction AddressBlock({ label, address }: AddressBlockProps) {\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}>{label}</div>\n      <div style={{ padding: 5 }}>\n        <IdentityBadge entity={address} shorten />\n      </div>\n    </>\n  );\n}\n\nexport default AddressBlock;\n","import React from 'react';\n\nimport BigNumber from 'bignumber.js';\nimport {formatBN} from \"../../utils/number\";\n\ntype BlanceBlockProps = {\n  asset: string,\n  balance: BigNumber | string | number\n  suffix?: string\n}\n\nfunction BalanceBlock({ asset, balance, suffix=\"\"}: BlanceBlockProps) {\n  let integer = '0';\n  let digits = '0';\n  const balanceBN = new BigNumber(balance);\n  if (balanceBN.gte(new BigNumber(0))) {\n    const tokens = formatBN(balanceBN, 2).split('.')\n    integer = tokens[0];\n    digits = tokens[1];\n  }\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}>{asset}</div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 24 }}>{integer}</span>\n        .\n        <span style={{ fontSize: 18 }}>\n          {' '}\n          {digits}\n          {' '}\n        </span>\n        {suffix === \"\" ? '' : <span style={{ fontSize: 18 }}>{suffix}</span> }\n      </div>\n    </>\n  );\n}\n\nexport default BalanceBlock;\n","import React from 'react';\n\nimport {\n  ButtonBase,\n} from '@aragon/ui';\n\nfunction MaxButton({ onClick }:{ onClick: Function }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nexport default MaxButton;\n","import React, { ReactChild } from 'react';\n\ntype commentProps = {\n  text: string | ReactChild\n}\n\nfunction Comment({ text }: commentProps) {\n  return (\n    <div style={{ padding: 5, opacity: 0.5 }}>\n      {text}\n    </div>\n  );\n}\n\nexport default Comment;\n","import styled from 'styled-components';\n\nconst FlexWrapper = styled.div`\n  // display: flex;\n  padding-left: 20%;\n  padding-right: 20%;\n`;\n\nexport default FlexWrapper;\n","import React from 'react';\nimport { Checkbox, useTheme } from '@aragon/ui';\nimport styled from 'styled-components';\n\ntype checkBoxProps = {\n  text: string,\n  checked: boolean,\n  onCheck: Function\n}\n\nfunction MyCheckBox({ text, checked, onCheck }: checkBoxProps) {\n  const theme = useTheme();\n  return (\n    <CheckBoxWrapper theme={theme}>\n      <Checkbox\n        checked={checked}\n        onChange={onCheck}\n      />\n      <span style={{ margin: '4px' }}>\n        {text}\n      </span>\n      <br />\n    </CheckBoxWrapper>\n  );\n}\n\nexport default MyCheckBox;\n\nconst CheckBoxWrapper = styled.div`{\n  display: flex;\n  font-size: 14px;\n  color: ${(props) => props.theme.surfaceContentSecondary}\n}`;","import React from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport { BalanceBlock, AddressBlock } from '../common/index';\n\ntype TradePageHeaderProps = {\n  pairBalanceRAM: BigNumber,\n  pairBalanceWETH: BigNumber,\n  uniswapPair: string,\n};\n\nconst TradePageHeader = ({\n  pairBalanceRAM, pairBalanceWETH, uniswapPair,\n}: TradePageHeaderProps) => {\n  const price = pairBalanceWETH.dividedBy(pairBalanceRAM);\n\n  return (\n    <div style={{ padding: '2%', display: 'flex', flexWrap: 'wrap', alignItems: 'center' }}>\n      <div style={{ flexBasis: '25%' }}>\n        <BalanceBlock asset=\"RAM Price\" balance={price} suffix={\"WETH\"}/>\n      </div>\n      <div style={{ flexBasis: '25%' }}>\n        <BalanceBlock asset=\"RAM Liquidity\" balance={pairBalanceRAM} suffix={\"RAM\"}/>\n      </div>\n      <div style={{ flexBasis: '25%' }}>\n        <BalanceBlock asset=\"WETH Liquidity\" balance={pairBalanceWETH} suffix={\"WETH\"}/>\n      </div>\n      <div style={{ flexBasis: '25%' }}>\n        <>\n          <AddressBlock label=\"Uniswap Contract\" address={uniswapPair} />\n        </>\n      </div>\n    </div>\n  );\n}\n\n\nexport default TradePageHeader;\n","import React from 'react';\n\nimport {\n  Header,\n} from '@aragon/ui';\n\ntype IconHeaderProps = {\n  icon: any,\n  text: string\n}\n\nfunction IconHeader({ icon, text }: IconHeaderProps) {\n  return (\n    <>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ marginRight: '2%', fontSize: 48 }}>\n          {icon}\n        </div>\n        <div>\n          <Header primary={text} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default IconHeader;\n","import React, { useState, useEffect } from 'react';\nimport { LinkBase, Box } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport { getTokenBalance } from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number';\n\nimport TradePageHeader from './Header';\nimport {RAM, UNI} from \"../../constants/tokens\";\nimport IconHeader from \"../common/IconHeader\";\n\n\nfunction UniswapPool({ user }: {user: string}) {\n  const [pairBalanceRAM, setPairBalanceRAM] = useState(new BigNumber(0));\n  const [pairBalanceUSDC, setPairBalanceUSDC] = useState(new BigNumber(0));\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [\n        pairBalanceRAMStr, pairBalanceUSDCStr,\n      ] = await Promise.all([\n        getTokenBalance(RAM.addr, UNI.addr),\n        getTokenBalance(\"0xd0a1e359811322d97991e03f863a0c30c2cf029c\", UNI.addr),\n      ]);\n\n      if (!isCancelled) {\n        setPairBalanceRAM(toTokenUnitsBN(pairBalanceRAMStr, RAM.decimals));\n        setPairBalanceUSDC(toTokenUnitsBN(pairBalanceUSDCStr, RAM.decimals));\n      }\n    }\n\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  return (\n    <>\n      <IconHeader icon={<i className=\"fas fa-exchange-alt\"/>} text=\"Trade\"/>\n\n      <TradePageHeader\n        pairBalanceRAM={pairBalanceRAM}\n        pairBalanceWETH={pairBalanceUSDC}\n        uniswapPair={UNI.addr}\n      />\n\n      <div style={{ padding: '1%', display: 'flex', flexWrap: 'wrap', alignItems: 'center' }}>\n        <div style={{ flexBasis: '30%', marginRight: '3%', marginLeft: '2%'  }}>\n          <MainButton\n            title=\"Info\"\n            description=\"View RAM-WETH pool stats.\"\n            icon={<i className=\"fas fa-chart-area\"/>}\n            href={\"https://uniswap.info/pair/0x5f629df06573607097d3ebf7bb276f11c20b00de\"}\n          />\n        </div>\n\n        <div style={{ flexBasis: '30%' }}>\n          <MainButton\n            title=\"Trade\"\n            description=\"Trade RAM tokens.\"\n            icon={<i className=\"fas fa-exchange-alt\"/>}\n            href={\"https://uniswap.exchange/swap?inputCurrency=0xcAcc27EE067794cddA679464b185fE8FB8391c9a&outputCurrency=0xd0a1e359811322d97991e03f863a0c30c2cf029c\"}\n          />\n        </div>\n\n        <div style={{ flexBasis: '30%', marginLeft: '3%', marginRight: '2%' }}>\n          <MainButton\n            title=\"Supply\"\n            description=\"Supply and redeem liquidity.\"\n            icon={<i className=\"fas fa-water\"/>}\n            href={\"https://uniswap.exchange/add/0xcAcc27EE067794cddA679464b185fE8FB8391c9a/0xd0a1e359811322d97991e03f863a0c30c2cf029c\"}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\ntype MainButtonProps = {\n  title: string,\n  description: string,\n  icon: any,\n  href:string\n}\n\nfunction MainButton({\n  title, description, icon, href,\n}:MainButtonProps) {\n  return (\n    <LinkBase href={href} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding: 10, fontSize: 18 }}>\n          {title}\n        </div>\n        <span style={{ fontSize: 48 }}>\n          {icon}\n        </span>\n        {/*<img alt=\"icon\" style={{ padding: 10, height: 64 }} src={iconUrl} />*/}\n        <div style={{ paddingTop: 5, opacity: 0.5 }}>\n          {' '}\n          {description}\n          {' '}\n        </div>\n\n      </Box>\n    </LinkBase>\n  );\n}\n\nexport default UniswapPool;\n","import React from 'react';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\ntype switchThemeProps = {\n  hasWeb3: boolean,\n  theme: string,\n  updateTheme: Function\n}\n\nfunction SwitchMode({ hasWeb3, theme, updateTheme }: switchThemeProps) {\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark');\n    else updateTheme('light');\n  };\n\n  return (\n    <Button\n      icon={theme === 'dark' ? <IconStar /> : <IconStarFilled />}\n      onClick={handleChangeTheme}\n      label=\"\"\n      disabled={!hasWeb3}\n    />\n  );\n}\n\n\nexport default SwitchMode;\n","import React from 'react';\nimport { LinkBase, useTheme } from '@aragon/ui';\nimport ChangeModeButton from \"./SwitchTheme\";\n\ntype FooterProps = {\n  updateTheme: Function,\n  theme: string,\n  hasWeb3: boolean,\n}\n\nfunction Footer({updateTheme, theme, hasWeb3}: FooterProps) {\n  const currentTheme = useTheme();\n\n  return (\n    <>\n      <div style={{\n        borderTop: '1px solid ' + currentTheme.border,\n        backgroundColor: currentTheme.surface,\n        textAlign: 'center',\n        position: 'fixed',\n        left: '0',\n        bottom: '0',\n        height: 'auto',\n        width: '100%',\n        fontSize: '14px'\n      }}>\n        <div style={{maxWidth: '1100px', marginLeft: 'auto', marginRight: 'auto'}}>\n          <div style={{ padding: '2%', display: 'flex'}}>\n            <div style={{ width: '50%', textAlign: 'left' }}>\n              <FooterLink icon={<i className=\"fab fa-github\"/>} href={\"\"}/>\n              <FooterLink icon={<i className=\"fab fa-twitter\"/>} href={\"\"}/>\n              <FooterLink icon={<i className=\"fab fa-medium\"/>} href={\"\"}/>\n              <FooterLink icon={<i className=\"fab fa-telegram\"/>} href={\"\"}/>\n              <FooterLink icon={<i className=\"fab fa-discord\"/>} href={\"\"}/>\n            </div>\n            <div style={{ width: '45%', textAlign: 'right', height: '18px', marginTop: '15px', marginBottom: '15px'}}>\n              made with <span role=\"img\" aria-labelledby=\"heartbreak\">💔️</span> by the &#123;ess&#125;.\n            </div>\n            <div style={{ width: '5%', textAlign: 'right', marginTop: '4px' }}>\n              <ChangeModeButton hasWeb3={hasWeb3} theme={theme} updateTheme={updateTheme} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\ntype FooterLinkProp = {\n  icon: any,\n  href: string,\n}\n\nfunction FooterLink({\n  icon, href,\n}:FooterLinkProp) {\n  return (\n    <LinkBase href={href} style={{marginLeft: '8px', marginRight: '8px'}}>\n      <span style={{ fontSize: 32 }}>{icon}</span>\n    </LinkBase>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\ntype TextBlockProps = {\n  label: string,\n  text: string\n}\n\nfunction TextBlock({ label, text }: TextBlockProps) {\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}>{label}</div>\n      <div style={{ fontSize: 24, padding: 3 }}>{text}</div>\n    </>\n  );\n}\n\nexport default TextBlock;\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport { BalanceBlock } from '../common/index';\nimport TextBlock from \"../common/TextBlock\";\n\ntype AccountPageHeaderProps = {\n  userLpToken: BigNumber,\n  userRamToken: BigNumber,\n  userEarnedToken: BigNumber,\n};\n\nconst STATUS_MAP = [\"Unlocked\", \"Locked\", \"Locked\"];\n\nconst AccountPageHeader = ({\n  userLpToken, userRamToken, userEarnedToken\n}: AccountPageHeaderProps) => (\n  <div style={{ padding: '2%', display: 'flex', flexWrap: 'wrap', alignItems: 'center' }}>\n    <div style={{ flexBasis: '25%' }}>\n      <TextBlock label=\"APY\" text=\"185%\"/>\n    </div>\n    <div style={{ flexBasis: '25%' }}>\n      <BalanceBlock asset=\"Wallet Balance\" balance={userLpToken} suffix={\" RAM-WETH\"}/>\n    </div>\n    <div style={{ flexBasis: '25%' }}>\n      <BalanceBlock asset=\"RAM\" balance={userRamToken} suffix={\" RAM\"} />\n    </div>\n    <div style={{ flexBasis: '25%' }}>\n      <BalanceBlock asset=\"Earned Amount\" balance={userEarnedToken}  suffix={\" RAM\"}/>\n    </div>\n  </div>\n);\n\n\nexport default AccountPageHeader;\n","import React from 'react';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  TextInput,\n} from '@aragon/ui';\n\ntype BigNumberInputProps = {\n  value: BigNumber,\n  setter: (value: BigNumber) => void\n  adornment?: any,\n  disabled?: boolean\n}\n\nfunction BigNumberInput({ value, setter, adornment, disabled=false }: BigNumberInputProps) {\n  return (\n    <>\n      <TextInput\n        type=\"number\"\n        adornmentPosition=\"end\"\n        adornment={adornment}\n        wide\n        value={value.isNegative() ? '' : value.toFixed()}\n        onChange={(event) => {\n          if (event.target.value) {\n            setter(new BigNumber(event.target.value));\n          } else {\n            setter(new BigNumber(-1));\n          }\n        }}\n        onBlur={() => {\n          if (value.isNegative()) {\n            setter(new BigNumber(0))\n          }\n        }}\n        disabled={disabled}\n      />\n    </>\n  );\n}\n\nexport default BigNumberInput;\n","import React, { useState } from 'react';\nimport {\n  Box, Button, IconCirclePlus\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock, MaxButton,\n} from '../common/index';\nimport {approve, deposit} from '../../utils/web3';\nimport {isPos, toBaseUnitBN} from '../../utils/number';\nimport {RAM, TokenGeyser, UNI} from \"../../constants/tokens\";\nimport {MAX_UINT256} from \"../../constants/values\";\nimport BigNumberInput from \"../common/BigNumberInput\";\n\ntype WithdrawDepositProps = {\n  user: string\n  balance: BigNumber,\n  allowance: BigNumber,\n  stagedBalance: BigNumber\n};\n\nfunction WithdrawDeposit({\n  user, balance, allowance, stagedBalance\n}: WithdrawDepositProps) {\n  const [depositAmount, setDepositAmount] = useState(new BigNumber(0));\n\n  return (\n    <Box heading=\"Stake\">\n      {allowance.comparedTo(MAX_UINT256) === 0 ?\n        <div style={{display: 'flex', flexWrap: 'wrap'}}>\n          {/* total Issued */}\n          <div style={{flexBasis: '32%'}}>\n            <BalanceBlock asset=\"Staked\" balance={stagedBalance} suffix={\"RAM\"}/>\n          </div>\n          {/* Deposit RAM into Geyser */}\n          <div style={{flexBasis: '50%', paddingTop: '2%'}}>\n            <div style={{display: 'flex'}}>\n              <div style={{width: '60%', minWidth: '6em'}}>\n                <>\n                <BigNumberInput\n                    adornment=\"RAM\"\n                    value={depositAmount}\n                    setter={setDepositAmount}\n                  />\n                  <MaxButton\n                    onClick={() => {\n                      setDepositAmount(balance);\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{width: '40%', minWidth: '6em'}}>\n                <Button\n                  wide\n                  icon={<IconCirclePlus/>}\n                  label=\"Deposit\"\n                  onClick={() => {\n                    deposit(\n                      TokenGeyser.addr,\n                      toBaseUnitBN(depositAmount, RAM.decimals),\n                    );\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        :\n        <div style={{display: 'flex', flexWrap: 'wrap'}}>\n          {/* total Issued */}\n          <div style={{flexBasis: '32%'}}>\n            <BalanceBlock asset=\"Staged\" balance={stagedBalance} suffix={\"RAM\"}/>\n          </div>\n          <div style={{flexBasis: '35%'}}/>\n          {/* Approve DAO to spend Døllar */}\n          <div style={{flexBasis: '33%', paddingTop: '2%'}}>\n            <Button\n              wide\n              icon={<IconCirclePlus />}\n              label=\"Approve\"\n              onClick={() => {\n                approve(UNI.addr, TokenGeyser.addr);\n              }}\n              disabled={user === ''}\n            />\n          </div>\n        </div>\n      }\n    </Box>\n  );\n}\n\nexport default WithdrawDeposit;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  getBalance, totalStakedFor, unstakeQuery, getTokenAllowance,\n} from '../../utils/infura';\nimport {UNI, TokenGeyser, RAM} from \"../../constants/tokens\";\nimport { toTokenUnitsBN } from '../../utils/number';\n\nimport AccountPageHeader from \"./Header\";\nimport WithdrawDeposit from \"./WithdrawDeposit\";\nimport IconHeader from \"../common/IconHeader\";\n\nfunction Wallet({ user }: {user: string}) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n\n  const [userLpToken, setUserLpToken] = useState(new BigNumber(0));\n  const [userStakedLpToken, setUserStakedLpToken] = useState(new BigNumber(0));\n  const [userRamToken, setRamToken] = useState(new BigNumber(0));\n  const [userEarnedToken, setEarnedToken] = useState(new BigNumber(0));\n\n  const [userESDAllowance, setUserESDAllowance] = useState(new BigNumber(0));\n\n  //Update User balances\n  useEffect(() => {\n    if (user === '') {\n      setUserLpToken(new BigNumber(0));\n      setUserStakedLpToken(new BigNumber(0));\n      setRamToken(new BigNumber(0));\n      setEarnedToken(new BigNumber(0));\n      setUserESDAllowance(new BigNumber(0));\n      return;\n    }\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [\n        lpTokens, stakedAmount, ramToken, earnedAmount, esdAllowance\n      ] = await Promise.all([\n        getBalance(UNI.addr, user),\n        totalStakedFor(TokenGeyser.addr, user),\n        getBalance(RAM.addr, user),\n        unstakeQuery(TokenGeyser.addr, user),\n        getTokenAllowance(RAM.addr, user, TokenGeyser.addr),\n      ]);\n\n      const userLpToken = toTokenUnitsBN(lpTokens, RAM.decimals);\n      const userStakedLpToken = toTokenUnitsBN(stakedAmount, RAM.decimals);\n      const userRamToken = toTokenUnitsBN(ramToken, RAM.decimals);\n      const userEarnedToken = toTokenUnitsBN(earnedAmount, RAM.decimals);\n\n      if (!isCancelled) {\n        setUserLpToken(new BigNumber(userLpToken));\n        setUserStakedLpToken(new BigNumber(userStakedLpToken));\n        setRamToken(new BigNumber(userRamToken));\n        setEarnedToken(new BigNumber(userEarnedToken));\n        setUserESDAllowance(new BigNumber(esdAllowance));\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  return (\n    <>\n      <IconHeader icon={<i className=\"fas fa-parachute-box\"/>} text=\"Stake\"/>\n\n      <AccountPageHeader\n        userLpToken={userLpToken}\n        userRamToken={userRamToken}\n        userEarnedToken={userEarnedToken}\n      />\n\n      <WithdrawDeposit\n        user={user}\n        balance={userLpToken}\n        allowance={userESDAllowance}\n        stagedBalance={userStakedLpToken}\n      />\n    </>\n  );\n}\n\nexport default Wallet;\n","import React from 'react';\n\nimport BigNumber from \"bignumber.js\";\n\nimport {Box, Distribution} from '@aragon/ui';\nimport {formatMoney, ownership} from \"../../utils/number\";\n\ntype RegulationHeaderProps = {\n  totalSupply: BigNumber,\n\n  totalBonded: BigNumber,\n  totalStaged: BigNumber,\n  totalRedeemable: BigNumber,\n\n  poolLiquidity: BigNumber,\n  poolRewarded: BigNumber,\n  poolClaimable: BigNumber,\n\n  legacyPoolRewarded: BigNumber,\n  legacyPoolClaimable: BigNumber,\n\n  totalDebt: BigNumber,\n  totalCoupons: BigNumber,\n  totalCouponsUnderlying: BigNumber,\n  couponPremium: BigNumber,\n};\n\nconst RegulationHeader = ({\n  totalSupply,\n  totalBonded, totalStaged, totalRedeemable,\n  poolLiquidity, poolRewarded, poolClaimable,\n  legacyPoolRewarded, legacyPoolClaimable,\n}: RegulationHeaderProps) => {\n  const daoTotalSupply = totalBonded.plus(totalStaged).plus(totalRedeemable);\n  const poolTotalSupply = poolLiquidity.plus(poolRewarded).plus(poolClaimable);\n  const legacyPoolTotalSupply = legacyPoolRewarded.plus(legacyPoolClaimable);\n  const circulatingSupply = totalSupply.minus(daoTotalSupply).minus(poolTotalSupply).minus(legacyPoolTotalSupply);\n\n  return (\n    <>\n      <div style={{display: 'flex', flexWrap: 'wrap'}}>\n        <div style={{ flexBasis: '30%', marginRight: '2%' }}>\n          <Box heading=\"Supply Allocation\">\n            <Distribution\n              heading={`∅${formatMoney(totalSupply.toNumber())}`}\n              items={[\n                { item: 'DAO', percentage: +(ownership(daoTotalSupply, totalSupply).toNumber().toFixed(2)) },\n                { item: 'Uniswap', percentage: +(ownership(poolTotalSupply, totalSupply).toNumber().toFixed(2)) },\n                { item: 'Circulating', percentage: +(ownership(circulatingSupply, totalSupply).toNumber().toFixed(2)) },\n              ]}\n            />\n          </Box>\n        </div>\n        <div style={{ flexBasis: '30%', marginRight: '2%' }}>\n          <Box heading=\"RAM Breakdown\">\n            <Distribution\n              heading={`∅${formatMoney(daoTotalSupply.toNumber())}`}\n              items={[\n                { item: 'Bonded', percentage: +(ownership(totalBonded, daoTotalSupply).toNumber().toFixed(2)) },\n                { item: 'Staged', percentage: +(ownership(totalStaged, daoTotalSupply).toNumber().toFixed(2)) },\n                { item: 'Redeemable', percentage: +(ownership(totalRedeemable, daoTotalSupply).toNumber().toFixed(2)) },\n              ]}\n            />\n          </Box>\n        </div>\n        <div style={{ flexBasis: '30%' }}>\n          <Box heading=\"Uniswap Breakdown\">\n            <Distribution\n              heading={`∅${formatMoney(poolTotalSupply.toNumber())}`}\n              items={[\n                { item: 'Liquidity', percentage: +(ownership(poolLiquidity, poolTotalSupply).toNumber().toFixed(2)) },\n                { item: 'Rewarded', percentage: +(ownership(poolRewarded, poolTotalSupply).toNumber().toFixed(2)) },\n                { item: 'Claimable', percentage: +(ownership(poolClaimable, poolTotalSupply).toNumber().toFixed(2)) },\n              ]}\n            />\n          </Box>\n        </div>\n      </div>\n    </>\n  );\n}\n\n\nexport default RegulationHeader;\n","import React, { useState, useEffect } from 'react';\nimport { Header } from '@aragon/ui';\n\nimport {\n  getCouponPremium,\n  getTotalCoupons, getTotalCouponsUnderlying,\n  getPoolTotalClaimable, getPoolTotalRewarded, getTokenBalance,\n  getTokenTotalSupply, getTotalBonded, getTotalDebt, getTotalRedeemable, getTotalStaged,\n} from '../../utils/infura';\nimport {ESD, ESDS, UNI} from \"../../constants/tokens\";\nimport {toTokenUnitsBN} from \"../../utils/number\";\nimport BigNumber from \"bignumber.js\";\nimport RegulationHeader from \"./Header\";\nimport IconHeader from \"../common/IconHeader\";\nimport {getLegacyPoolAddress, getPoolAddress} from \"../../utils/pool\";\n\nconst ONE_COUPON = new BigNumber(10).pow(18);\n\nfunction Regulation({ user }: {user: string}) {\n\n  const [totalSupply, setTotalSupply] = useState(new BigNumber(0));\n  const [totalBonded, setTotalBonded] = useState(new BigNumber(0));\n  const [totalStaged, setTotalStaged] = useState(new BigNumber(0));\n  const [totalRedeemable, setTotalRedeemable] = useState(new BigNumber(0));\n  const [poolLiquidity, setPoolLiquidity] = useState(new BigNumber(0));\n  const [poolTotalRewarded, setPoolTotalRewarded] = useState(new BigNumber(0));\n  const [poolTotalClaimable, setPoolTotalClaimable] = useState(new BigNumber(0));\n  const [legacyPoolTotalRewarded, setLegacyPoolTotalRewarded] = useState(new BigNumber(0));\n  const [legacyPoolTotalClaimable, setLegacyPoolTotalClaimable] = useState(new BigNumber(0));\n  const [totalDebt, setTotalDebt] = useState(new BigNumber(0));\n  const [totalCoupons, setTotalCoupons] = useState(new BigNumber(0));\n  const [totalCouponsUnderlying, setTotalCouponsUnderlying] = useState(new BigNumber(0));\n  const [couponPremium, setCouponPremium] = useState(new BigNumber(0));\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const poolAddress = await getPoolAddress();\n      const legacyPoolAddress = getLegacyPoolAddress(poolAddress);\n\n      const [\n        totalSupplyStr,\n        totalBondedStr, totalStagedStr, totalRedeemableStr,\n        poolLiquidityStr, poolTotalRewardedStr, poolTotalClaimableStr,\n        legacyPoolTotalRewardedStr, legacyPoolTotalClaimableStr,\n        totalDebtStr, totalCouponsStr, totalCouponsUnderlyingStr\n      ] = await Promise.all([\n        getTokenTotalSupply(ESD.addr),\n\n        getTotalBonded(ESDS.addr),\n        getTotalStaged(ESDS.addr),\n        getTotalRedeemable(ESDS.addr),\n\n        getTokenBalance(ESD.addr, UNI.addr),\n        getPoolTotalRewarded(poolAddress),\n        getPoolTotalClaimable(poolAddress),\n\n        getPoolTotalRewarded(legacyPoolAddress),\n        getPoolTotalClaimable(legacyPoolAddress),\n\n        getTotalDebt(ESDS.addr),\n        getTotalCoupons(ESDS.addr),\n        getTotalCouponsUnderlying(ESDS.addr),\n      ]);\n\n      if (!isCancelled) {\n        setTotalSupply(toTokenUnitsBN(totalSupplyStr, ESD.decimals));\n\n        setTotalBonded(toTokenUnitsBN(totalBondedStr, ESD.decimals));\n        setTotalStaged(toTokenUnitsBN(totalStagedStr, ESD.decimals));\n        setTotalRedeemable(toTokenUnitsBN(totalRedeemableStr, ESD.decimals));\n\n        setPoolLiquidity(toTokenUnitsBN(poolLiquidityStr, ESD.decimals));\n        setPoolTotalRewarded(toTokenUnitsBN(poolTotalRewardedStr, ESD.decimals));\n        setPoolTotalClaimable(toTokenUnitsBN(poolTotalClaimableStr, ESD.decimals));\n\n        setLegacyPoolTotalRewarded(toTokenUnitsBN(legacyPoolTotalRewardedStr, ESD.decimals));\n        setLegacyPoolTotalClaimable(toTokenUnitsBN(legacyPoolTotalClaimableStr, ESD.decimals));\n\n        setTotalDebt(toTokenUnitsBN(totalDebtStr, ESD.decimals));\n        setTotalCoupons(toTokenUnitsBN(totalCouponsStr, ESD.decimals));\n        setTotalCouponsUnderlying(toTokenUnitsBN(totalCouponsUnderlyingStr, ESD.decimals));\n\n        if (new BigNumber(totalDebtStr).isGreaterThan(ONE_COUPON)) {\n          const couponPremiumStr = await getCouponPremium(ESDS.addr, ONE_COUPON)\n          setCouponPremium(toTokenUnitsBN(couponPremiumStr, ESD.decimals));\n        } else {\n          setCouponPremium(new BigNumber(0));\n        }\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  return (\n    <>\n      <IconHeader icon={<i className=\"fas fa-chart-area\"/>} text=\"Supply Regulation\"/>\n\n      <RegulationHeader\n        totalSupply={totalSupply}\n\n        totalBonded={totalBonded}\n        totalStaged={totalStaged}\n        totalRedeemable={totalRedeemable}\n\n        poolLiquidity={poolLiquidity}\n        poolRewarded={poolTotalRewarded}\n        poolClaimable={poolTotalClaimable}\n\n        legacyPoolRewarded={legacyPoolTotalRewarded}\n        legacyPoolClaimable={legacyPoolTotalClaimable}\n\n        totalDebt={totalDebt}\n        totalCoupons={totalCoupons}\n        totalCouponsUnderlying={totalCouponsUnderlying}\n        couponPremium={couponPremium}\n      />\n    </>\n  );\n}\n\nexport default Regulation;\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport { BalanceBlock } from '../common/index';\nimport TextBlock from \"../common/TextBlock\";\n\ntype PoolPageHeaderProps = {\n  userLpToken: BigNumber,\n  userRamToken: BigNumber,\n  userEarnedToken: BigNumber,\n};\n\nconst PoolPageHeader = ({\n  userLpToken, userRamToken, userEarnedToken\n}: PoolPageHeaderProps) => (\n  <div style={{ padding: '2%', display: 'flex', flexWrap: 'wrap', alignItems: 'center' }}>\n    <div style={{ flexBasis: '25%' }}>\n      <TextBlock label=\"APY\" text=\"185%\"/>\n    </div>\n    <div style={{ flexBasis: '25%' }}>\n      <BalanceBlock asset=\"Wallet Balance\" balance={userLpToken} suffix={\" RAM-WETH\"}/>\n    </div>\n    <div style={{ flexBasis: '25%' }}>\n      <BalanceBlock asset=\"RAM\" balance={userRamToken} suffix={\" RAM\"} />\n    </div>\n    <div style={{ flexBasis: '25%' }}>\n      <BalanceBlock asset=\"Earned Amount\" balance={userEarnedToken}  suffix={\" RAM\"}/>\n    </div>\n  </div>\n);\n\n\nexport default PoolPageHeader;\n","import React, { useState } from 'react';\nimport {\n  Box, Button, IconCirclePlus\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock, MaxButton,\n} from '../common/index';\nimport {unStake} from '../../utils/web3';\nimport {isPos, toBaseUnitBN} from '../../utils/number';\nimport {TokenGeyser, UNI} from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\n\ntype WithdrawDepositProps = {\n  userStakedLpToken: BigNumber\n  user: string\n};\n\nfunction WithdrawDeposit({\n  userStakedLpToken\n}: WithdrawDepositProps) {\n  const [depositAmount, setDepositAmount] = useState(new BigNumber(0));\n\n  return (\n    <Box heading=\"Stage\">\n        <div style={{display: 'flex', flexWrap: 'wrap'}}>\n          {/* total Issued */}\n          <div style={{flexBasis: '32%'}}>\n            <BalanceBlock asset=\"Staged\" balance={userStakedLpToken} suffix={\"UNI-V2\"}/>\n          </div>\n          {/* Deposit UNI-V2 into Pool */}\n          <div style={{flexBasis: '50%', paddingTop: '2%'}}>\n            <div style={{display: 'flex'}}>\n              <div style={{width: '60%', minWidth: '6em'}}>\n                <>\n                  <BigNumberInput\n                    adornment=\"UNI-V2\"\n                    value={depositAmount}\n                    setter={setDepositAmount}\n                    disabled={false}\n                  />\n                  <MaxButton\n                    onClick={() => {\n                      setDepositAmount(userStakedLpToken);\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{width: '40%', minWidth: '7em'}}>\n                <Button\n                  wide\n                  icon={<IconCirclePlus/>}\n                  label=\"Withdraw\"\n                  onClick={() => {\n                    unStake(\n                      TokenGeyser.addr,\n                      toBaseUnitBN(userStakedLpToken, UNI.decimals),\n                      (hash) => setDepositAmount(new BigNumber(0))\n                    );\n                  }}\n                  disabled={TokenGeyser.addr === '' || !isPos(depositAmount)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n    </Box>\n  );\n}\n\nexport default WithdrawDeposit;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  getBalance, totalStakedFor, unstakeQuery, getTokenAllowance,\n} from '../../utils/infura';\nimport {UNI, TokenGeyser, RAM} from \"../../constants/tokens\";\nimport { toTokenUnitsBN } from '../../utils/number';\n\nimport PoolPageHeader from \"./Header\";\nimport WithdrawDeposit from \"./WithdrawDeposit\";\nimport IconHeader from \"../common/IconHeader\";\n\nfunction Pool({ user }: {user: string}) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n\n  const [userLpToken, setUserLpToken] = useState(new BigNumber(0));\n  const [userStakedLpToken, setUserStakedLpToken] = useState(new BigNumber(0));\n  const [userRamToken, setRamToken] = useState(new BigNumber(0));\n  const [userEarnedToken, setEarnedToken] = useState(new BigNumber(0));\n\n  const [userESDAllowance, setUserESDAllowance] = useState(new BigNumber(0));\n\n  //Update User balances\n  useEffect(() => {\n    if (user === '') {\n      setUserLpToken(new BigNumber(0));\n      setUserStakedLpToken(new BigNumber(0));\n      setRamToken(new BigNumber(0));\n      setEarnedToken(new BigNumber(0));\n      setUserESDAllowance(new BigNumber(0));\n      return;\n    }\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [\n        lpTokens, stakedAmount, ramToken, earnedAmount, esdAllowance\n      ] = await Promise.all([\n        getBalance(UNI.addr, user),\n        totalStakedFor(TokenGeyser.addr, user),\n        getBalance(RAM.addr, user),\n        unstakeQuery(TokenGeyser.addr, user),\n        getTokenAllowance(RAM.addr, user, TokenGeyser.addr),\n      ]);\n\n      const userLpToken = toTokenUnitsBN(lpTokens, RAM.decimals);\n      const userStakedLpToken = toTokenUnitsBN(stakedAmount, RAM.decimals);\n      const userRamToken = toTokenUnitsBN(ramToken, RAM.decimals);\n      const userEarnedToken = toTokenUnitsBN(earnedAmount, RAM.decimals);\n\n      if (!isCancelled) {\n        setUserLpToken(new BigNumber(userLpToken));\n        setUserStakedLpToken(new BigNumber(userStakedLpToken));\n        setRamToken(new BigNumber(userRamToken));\n        setEarnedToken(new BigNumber(userEarnedToken));\n        setUserESDAllowance(new BigNumber(esdAllowance));\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n  return (\n    <>\n      <IconHeader icon={<i className=\"fas fa-parachute-box\"/>} text=\"LP Reward Pool\"/>\n\n      <PoolPageHeader\n        userLpToken={userLpToken}\n        userRamToken={userRamToken}\n        userEarnedToken={userEarnedToken}\n      />\n\n      <WithdrawDeposit\n        userStakedLpToken={userStakedLpToken}\n        user={user}\n      />\n    </>\n  );\n}\n\nexport default Pool;\n","import React from 'react';\nimport {\n  Box, LinkBase, Tag,\n} from '@aragon/ui';\n\nfunction HomePageNoWeb3() {\n\n  return (\n    <>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <MainButton\n          title=\"No web3 wallet detected\"\n          description=\"Click to get Metamask.\"\n          icon={<i className=\"fas fa-times-circle\"/>}\n          onClick={() => {\n            // @ts-ignore\n            window.location = 'https://www.metamask.io/';\n          }}\n        />\n      </div>\n    </>\n  );\n}\n\ntype MainButtonPropx = {\n  title: string,\n  description: string,\n  icon: any,\n  onClick: Function,\n  tag?:string\n}\n\nfunction MainButton({\n  title, description, icon, onClick, tag,\n}:MainButtonPropx) {\n  return (\n    <LinkBase onClick={onClick} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding: 10, fontSize: 18 }}>\n          {title}\n          {tag ? <Tag>{tag}</Tag> : <></>}\n        </div>\n        <span style={{ fontSize: 48 }}>\n          {icon}\n        </span>\n        {/*<img alt=\"icon\" style={{ padding: 10, height: 64 }} src={iconUrl} />*/}\n        <div style={{ paddingTop: 5, opacity: 0.5 }}>\n          {' '}\n          {description}\n          {' '}\n        </div>\n\n      </Box>\n    </LinkBase>\n  );\n}\n\nexport default HomePageNoWeb3;\n","import React, {useEffect, useState} from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Main, Layout } from '@aragon/ui';\nimport { UseWalletProvider } from 'use-wallet';\nimport { updateModalMode } from './utils/web3';\nimport { storePreference, getPreference } from './utils/storage';\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage';\nimport Trade from './components/Trade/index';\nimport Footer from './components/Footer';\nimport Wallet from \"./components/Wallet\";\nimport Regulation from \"./components/Regulation\";\nimport Withdraw from \"./components/Withdraw\";\nimport HomePageNoWeb3 from \"./components/HomePageNoWeb3\";\n\nfunction App() {\n  const storedTheme = getPreference('theme', 'light');\n\n  const [hasWeb3, setHasWeb3] = useState(false);\n  const [user, setUser] = useState(''); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (newTheme: string) => {\n    setTheme(newTheme);\n    updateModalMode(newTheme);\n    storePreference('theme', newTheme);\n  };\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      if (!isCancelled) {\n        // @ts-ignore\n        setHasWeb3(typeof window.ethereum !== 'undefined');\n      }\n    }\n\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  return (\n    <Router>\n      <UseWalletProvider\n        chainId={1}\n        connectors={{\n          walletconnect: { rpcUrl: 'https://mainnet.eth.aragon.network/' },\n          walletlink: {\n            url: 'https://mainnet.eth.aragon.network/',\n            appName:'Coinbase Wallet',\n            appLogoUrl: ''\n          }\n        }}\n      >\n        <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={theme} layout={false}>\n          <NavBar hasWeb3={hasWeb3} user={user} setUser={setUser} />\n          <Layout>\n          {\n            hasWeb3 ?\n              <Switch>\n                <Route path=\"/dao/:override\"><Wallet user={user}/></Route>\n                <Route path=\"/dao/\"><Wallet user={user}/></Route>\n                <Route path=\"/trade/\"><Trade user={user}/></Route>\n                <Route path=\"/regulation/\"><Regulation user={user}/></Route>\n                <Route path=\"/pool/:override\"><Withdraw user={user}/></Route>\n                <Route path=\"/pool/\"><Withdraw user={user}/></Route>\n                <Route path=\"/\"><HomePage user={user}/></Route>\n              </Switch>\n              :\n              <Switch>\n                <Route path=\"/\"><HomePageNoWeb3/></Route>\n              </Switch>\n          }\n          </Layout>\n          <div style={{height: '128px', width: '100%'}}/>\n          <Footer hasWeb3={hasWeb3} theme={theme} updateTheme={updateTheme}/>\n        </Main>\n      </UseWalletProvider>\n    </Router>\n  );\n}\n\n\nexport default App;\n","/**\n * Get value by key\n * @param {string} key\n * @param {string} defaultValue\n */\nexport function getPreference(key:string, defaultValue:string): string {\n  return localStorage.getItem(key) || defaultValue;\n}\n\n/**\n * store value to storage\n * @param {string} key\n * @param {string} value\n */\nexport function storePreference(key:string, value:string):void {\n  localStorage.setItem(key, value);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport Moment from 'moment'\nimport momentLocalizer from 'react-widgets-moment';\n\nMoment.locale('en')\nmomentLocalizer()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}